<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxd.studentManage.mapper.IStudentListMapper">
    <!--默认显示查询全部员工数据-->
    <select id="getAllStudent" resultType="java.util.HashMap">
        SELECT s.*,de.departmentname,du.dutyname,c.classname
        FROM student s,department de,duty du,class c
        where s.departmentid=de.departmentid
        and s.dutyid=du.dutyid and c.classid = s.classid and s.isdelete= 0
    </select>

    <select id="getAllStudentByName" resultType="java.util.HashMap">
            select s.*,de.departmentname,du.dutyname,c.classname
            from student s
            LEFT JOIN department de ON s.departmentid = de.departmentid
            LEFT JOIN duty du ON s.dutyid = du.dutyid
            LEFT JOIN class c on c.classid = s.classid
            where s.studentname like concat("%",#{studentname},"%") and s.isdelete=0
    </select>

    <select id="getAllStudentByDept" resultType="java.util.HashMap">
            select s.*,de.departmentname,du.dutyname,c.classname
            from student s
            LEFT JOIN department de ON s.departmentid = de.departmentid
            LEFT JOIN duty du ON s.dutyid = du.dutyid
            LEFT JOIN class c on c.classid = s.classid
            where de.departmentname like concat("%",#{departmentname},"%") and s.isdelete=0
    </select>

    <select id="getAllStudentByNameAndDept" resultType="java.util.HashMap">
        select s.*,de.departmentname,du.dutyname
        from student s
        LEFT JOIN department de ON s.departmentid = de.departmentid
        LEFT JOIN duty du ON de.departmentid = du.dutyid
        where s.studentname like concat("%",#{studentname},"%")
        and de.departmentname like concat("%",#{departmentname},"%") and s.isdelete=0
    </select>

    <!--默认显示查询全部老师-->
    <select id="getAllTeacher" resultType="java.util.HashMap">
        SELECT t.teacherid id,t.teachername name,de.departmentname,du.dutyname
        FROM teacher t,department de,duty du
        where t.departmentid=de.departmentid
        and t.dutyid=du.dutyid and t.isdelete = 0
    </select>

    <!--根据姓名查询老师-->
    <select id="getAllTeacherByName" resultType="java.util.HashMap">
            select t.teacherid id,t.teachername name,de.departmentname,du.dutyname
            from teacher t
            LEFT JOIN department de ON t.departmentid = de.departmentid
            LEFT JOIN duty du ON t.dutyid = du.dutyid
            where t.teachername like concat("%",#{teachername},"%") and t.isdelete = 0
    </select>

    <!--<select id="getAllTeacherByDept" resultType="java.util.HashMap">
            select t.teacherid id,t.teachername name,de.departmentname,du.dutyname
            from teacher t
            LEFT JOIN department de ON t.departmentid = de.departmentid
            LEFT JOIN duty du ON t.dutyid = du.dutyid
            where de.departmentname like concat("%",#{departmentname},"%") and t.isdelete = 0
    </select>

    <select id="getAllTeacherByNameAndDept" resultType="java.util.HashMap">
        select t.teacherid id,t.teachername name,de.departmentname,du.dutyname
        from teacher t
        LEFT JOIN department de ON t.departmentid = de.departmentid
        LEFT JOIN duty du ON de.departmentid = du.dutyid
        where t.teachername like concat("%",#{teachername},"%")
        and de.departmentname like concat("%",#{departmentname},"%") and t.isdelete = 0
    </select>-->


    <!--默认查询全部经理-->
    <select id="getAllManager" resultType="java.util.HashMap">
        SELECT m.managerid id,m.managername name,de.departmentname,du.dutyname
        FROM manager m,department de,duty du
        where m.departmentid=de.departmentid
        and m.dutyid=du.dutyid and m.isdelete = 0
    </select>

    <!--根据姓名查询经理-->
    <select id="getAllManagerByName" resultType="java.util.HashMap">
            select m.managerid id,m.managername name,de.departmentname,du.dutyname
            from manager m
            LEFT JOIN department de ON m.departmentid = de.departmentid
            LEFT JOIN duty du ON m.dutyid = du.dutyid
            where m.managername like concat("%",#{managername},"%") and m.isdelete = 0
    </select>

    <!--根据部门查询经理-->
    <select id="getAllManagerByDept" resultType="java.util.HashMap">
            select m.managerid id,m.managername name,de.departmentname,du.dutyname
            from manager m
            LEFT JOIN department de ON m.departmentid = de.departmentid
            LEFT JOIN duty du ON m.dutyid = du.dutyid
            where de.departmentname like concat("%",#{departmentname},"%") and m.isdelete = 0
    </select>

    <!--根据姓名和部门查询经理-->
    <select id="getAllManagerByNameAndDept" resultType="java.util.HashMap">
        select m.managerid id,m.managername name,de.departmentname,du.dutyname
        from manager m
        LEFT JOIN department de ON m.departmentid = de.departmentid
        LEFT JOIN duty du ON de.departmentid = du.dutyid
        where m.managername like concat("%",#{managername},"%")
        and de.departmentname like concat("%",#{departmentname},"%") and m.isdelete = 0
    </select>

    <!--假删除-->
    <!--<update id="delStudent" parameterType="java.util.HashMap">
        update student set isdelete=1 where studentid in(
        <foreach collection="array" item="studentId" separator=",">
            #{studentId}
        </foreach>
        )
    </update>-->

    <!--修改-->


    <!--添加-->
    <insert id="addStudent" parameterType="java.util.HashMap">
        insert into student (studentname,sex,nation,birthday,address,ismarried,tel,school,major,remark,idcard,dutyid,departmentid,classid,isdelete)
        values (#{map.studentName},#{map.sex},#{map.nation},#{map.birthday},#{map.address},#{map.isMarried},#{map.tel},#{map.school},#{map.major},#{map.remark},#{map.idcard},#{map.dutyname},#{map.departmentname},#{map.class},0)
    </insert>
    <!--查询全部班期-->
    <select id="getClass" resultType="Class">
        select * from class;
    </select>
<!--添加班期-->
    <insert id="addClass">
        insert into class(classname,teacherid ) values (#{classname},#{teacherid})
    </insert>
    <!--添加用户表-->
    <insert id="addStudentUser" parameterType="java.lang.String" >
        insert into user(username,password,role) values (#{username},"123",0)
    </insert>
    <!--删除-->
    <update id="deleteStudent" parameterType="java.lang.Integer">
        update student set isdelete = 1 where studentid = #{studentid}
    </update>
<!--修改-->
    <update id="editStudent" parameterType="java.util.HashMap">
        update student set studentname=#{map.studentname},sex = #{map.sex},nation = #{map.nation},
        birthday = #{map.birthday},address=#{map.address},ismarried = #{map.ismarried},tel = #{map.tel},
        school = #{map.school},major = #{map.major},remark = #{map.remark},idcard = #{map.idcard},dutyid = #{map.dutyid},
        departmentid = #{map.departmentid},classid = #{map.classid} where studentid = #{map.studentid}
    </update>
    <!--修改用户表-->
    <update id="editStudentUser" parameterType="java.lang.String">
        update user set username = #{newname} where username = #{oldstudentname}
    </update>

    <!--添加老师-->
    <insert id="insertTeacher">
        insert into teacher
        (teachername,departmentid,dutyid)
        values
        (#{teacherName},'1','1')
    </insert>

    <!--添加老师到用户表-->
    <insert id="insertTeacherUser" parameterType="java.lang.String" >
        insert into user(username,password,role) values (#{userName},"123",'1')
    </insert>

    <!--修改老师-->
    <update id="updateTeacher" >
        update teacher set teachername = #{teacherName} where teacherid = #{teacherId}
    </update>

    <!--修改用户表老师-->
    <update id="updateTeacherUser" parameterType="java.lang.String">
        update user set username = #{userName} where username = #{oldTeacherName}
    </update>

    <!--删除老师-->
    <update id="deleteTeacher" parameterType="java.lang.Integer">
        update teacher set isdelete = 1 where teacherid = #{teacherId}
    </update>

    <!--添加经理-->
    <insert id="insertManager">
        insert into manager
        (managername,departmentid,dutyid)
        values
        (#{managerName,},#{departmentId},'2')
    </insert>

    <!--添加经理到用户表-->
    <insert id="insertManagerUser" parameterType="java.lang.String" >
        insert into user(username,password,role) values (#{userName},"123",'2')
    </insert>

    <!--修改经理-->
    <update id="updateManager">
        update manager set managername = #{managerName},departmentid = #{departmentId} where managerid = #{managerId}
    </update>

    <!--修改用户表经理-->
    <update id="updateManagerUser" parameterType="java.lang.String">
        update user set username = #{userName} where username = #{oldManagerName}
    </update>

    <!--删除经理-->
    <update id="deleteManager" parameterType="java.lang.Integer">
        update manager set isdelete = 1 where managerid = #{managerId}
    </update>

</mapper>